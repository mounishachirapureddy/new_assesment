# Complete Script for Installing Docker, Minikube, and kubectl on Ubuntu
# This script automates the process of installing Docker, Minikube, and kubectl on an Ubuntu-based system, preparing your machine for local Kubernetes clusters. It also ensures that any conflicting or outdated Docker packages are removed before starting the installation.

# 1. Remove Existing Docker Packages

for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done

# 2. Update the System and Install Required Dependencies

sudo apt update -y
sudo apt upgrade -y
sudo apt install curl wget apt-transport-https -y

# Explanation:
# sudo apt update -y: Updates the package database for the latest available packages.
# sudo apt upgrade -y: Upgrades installed packages to their latest versions.
# sudo apt install curl wget apt-transport-https -y: Installs utilities like curl (for downloading files) and wget, as well as apt-transport-https for handling HTTPS connections during package installation.

# 3. Install Docker
# a. Install Required Certificates

sudo apt-get install ca-certificates curl

# ca-certificates: Installs necessary certificates to authenticate secure connections.
# curl: A tool used to fetch files from remote sources.

# b. Create Directory for Storing Docker's GPG Key

sudo install -m 0755 -d /etc/apt/keyrings

# Creates the /etc/apt/keyrings directory with appropriate permissions to store Docker’s official GPG key.

# c. Download and Install Docker’s GPG Key

sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Downloads Docker's GPG key and saves it to /etc/apt/keyrings/docker.asc.
# Sets read permissions for the key to allow verification of downloaded packages.
# d. Add Docker Repository to Apt Sources

echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Adds Docker’s official APT repository to the system sources list. It dynamically uses the correct system architecture and Ubuntu version codename for compatibility.
# e. Update the Package Database and Install Docker

sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# docker-ce: Installs the Docker Engine.
# docker-ce-cli: Installs the command-line interface for Docker.
# containerd.io: Installs the container runtime that Docker uses.
# docker-buildx-plugin: Enables advanced features for building Docker images.
# docker-compose-plugin: Adds Docker Compose functionality to manage multi-container applications.
# 4. Verify Docker Installation

sudo docker --version

# Verifies the installation of Docker by checking its version.
# 5. Install Minikube
# a. Download and Install Minikube

sudo curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo mv minikube-linux-amd64 /usr/local/bin/minikube
sudo chmod +x /usr/local/bin/minikube

# Downloads the latest stable version of Minikube and moves it to /usr/local/bin/ for global access.
# Adds execution permissions to the Minikube binary.

# b. Verify Minikube Installation

sudo minikube version

# Verifies the Minikube installation by checking its version.
# 6. Install kubectl
# a. Download kubectl

sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"

# Downloads the latest stable version of kubectl and the corresponding checksum file for verification.
# b. Verify kubectl Integrity

sudo echo "$(cat kubectl.sha256) kubectl" | sha256sum --check

# Verifies the integrity of the downloaded kubectl binary using the SHA256 checksum to ensure the file is not corrupted.
# c. Install kubectl

sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# Installs kubectl to /usr/local/bin/ with appropriate permissions, making it globally executable.

# 7. Start Minikube with Docker Driver

sudo minikube start --driver=docker --force

# Starts a Minikube cluster with Docker as the driver, using containers for Kubernetes nodes instead of virtual machines.
# --force: Forces Minikube to start even if previous configurations exist.
# 8. Verify Minikube and kubectl Setup

kubectl get nodes



